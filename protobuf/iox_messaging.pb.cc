// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: iox_messaging.proto
// Protobuf C++ Version: 5.27.4

#include "iox_messaging.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace com {
namespace geotab {
namespace ioxproto {

inline constexpr Vec3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vec3::Vec3(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Vec3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vec3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vec3DefaultTypeInternal() {}
  union {
    Vec3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vec3DefaultTypeInternal _Vec3_default_instance_;

inline constexpr Unsubscribe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topic_{static_cast< ::com::geotab::ioxproto::Topic >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Unsubscribe::Unsubscribe(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UnsubscribeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeDefaultTypeInternal() {}
  union {
    Unsubscribe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeDefaultTypeInternal _Unsubscribe_default_instance_;

inline constexpr TopicList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topics_{},
        _topics_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TopicList::TopicList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicListDefaultTypeInternal() {}
  union {
    TopicList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicListDefaultTypeInternal _TopicList_default_instance_;

inline constexpr TopicInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topic_{static_cast< ::com::geotab::ioxproto::Topic >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TopicInfo::TopicInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicInfoDefaultTypeInternal() {}
  union {
    TopicInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicInfoDefaultTypeInternal _TopicInfo_default_instance_;

inline constexpr Subscribe::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topic_{static_cast< ::com::geotab::ioxproto::Topic >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Subscribe::Subscribe(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SubscribeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeDefaultTypeInternal() {}
  union {
    Subscribe _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeDefaultTypeInternal _Subscribe_default_instance_;

inline constexpr SubAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::com::geotab::ioxproto::SubAck_Result >(0)},
        topic_{static_cast< ::com::geotab::ioxproto::Topic >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubAck::SubAck(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SubAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubAckDefaultTypeInternal() {}
  union {
    SubAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubAckDefaultTypeInternal _SubAck_default_instance_;

inline constexpr ClearSubsAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::com::geotab::ioxproto::ClearSubsAck_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClearSubsAck::ClearSubsAck(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ClearSubsAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearSubsAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearSubsAckDefaultTypeInternal() {}
  union {
    ClearSubsAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearSubsAckDefaultTypeInternal _ClearSubsAck_default_instance_;

inline constexpr TopicInfoList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : topics_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TopicInfoList::TopicInfoList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TopicInfoListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TopicInfoListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TopicInfoListDefaultTypeInternal() {}
  union {
    TopicInfoList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TopicInfoListDefaultTypeInternal _TopicInfoList_default_instance_;

inline constexpr PubSubToGo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PubSubToGo::PubSubToGo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PubSubToGoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PubSubToGoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PubSubToGoDefaultTypeInternal() {}
  union {
    PubSubToGo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PubSubToGoDefaultTypeInternal _PubSubToGo_default_instance_;

inline constexpr Gps::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gps_time_{nullptr},
        latitude_{0},
        longitude_{0},
        speed_{0},
        heading_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Gps::Gps(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GpsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpsDefaultTypeInternal() {}
  union {
    Gps _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpsDefaultTypeInternal _Gps_default_instance_;

inline constexpr Publish::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{nullptr},
        topic_{static_cast< ::com::geotab::ioxproto::Topic >(0)},
        value_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Publish::Publish(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PublishDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishDefaultTypeInternal() {}
  union {
    Publish _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishDefaultTypeInternal _Publish_default_instance_;

inline constexpr IoxToGo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR IoxToGo::IoxToGo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IoxToGoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IoxToGoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IoxToGoDefaultTypeInternal() {}
  union {
    IoxToGo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IoxToGoDefaultTypeInternal _IoxToGo_default_instance_;

inline constexpr PubSubFromGo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PubSubFromGo::PubSubFromGo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PubSubFromGoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PubSubFromGoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PubSubFromGoDefaultTypeInternal() {}
  union {
    PubSubFromGo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PubSubFromGoDefaultTypeInternal _PubSubFromGo_default_instance_;

inline constexpr IoxFromGo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR IoxFromGo::IoxFromGo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IoxFromGoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IoxFromGoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IoxFromGoDefaultTypeInternal() {}
  union {
    IoxFromGo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IoxFromGoDefaultTypeInternal _IoxFromGo_default_instance_;
}  // namespace ioxproto
}  // namespace geotab
}  // namespace com
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_iox_5fmessaging_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_iox_5fmessaging_2eproto = nullptr;
const ::uint32_t
    TableStruct_iox_5fmessaging_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::SubAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::SubAck, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::SubAck, _impl_.topic_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::TopicInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::TopicInfo, _impl_.topic_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::TopicList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::TopicList, _impl_.topics_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::TopicInfoList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::TopicInfoList, _impl_.topics_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::ClearSubsAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::ClearSubsAck, _impl_.result_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Vec3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Vec3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Vec3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Vec3, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _impl_.latitude_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _impl_.longitude_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _impl_.speed_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _impl_.heading_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Gps, _impl_.gps_time_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _impl_.topic_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _impl_.value_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Subscribe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Subscribe, _impl_.topic_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Unsubscribe, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Unsubscribe, _impl_.topic_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubToGo, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubToGo, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubToGo, _impl_.msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubFromGo, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubFromGo, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubFromGo, _impl_.msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxToGo, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxToGo, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxToGo, _impl_.msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxFromGo, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxFromGo, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxFromGo, _impl_.msg_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::com::geotab::ioxproto::SubAck)},
        {10, -1, -1, sizeof(::com::geotab::ioxproto::TopicInfo)},
        {19, -1, -1, sizeof(::com::geotab::ioxproto::TopicList)},
        {28, -1, -1, sizeof(::com::geotab::ioxproto::TopicInfoList)},
        {37, -1, -1, sizeof(::com::geotab::ioxproto::ClearSubsAck)},
        {46, -1, -1, sizeof(::com::geotab::ioxproto::Vec3)},
        {57, 70, -1, sizeof(::com::geotab::ioxproto::Gps)},
        {75, 93, -1, sizeof(::com::geotab::ioxproto::Publish)},
        {102, -1, -1, sizeof(::com::geotab::ioxproto::Subscribe)},
        {111, -1, -1, sizeof(::com::geotab::ioxproto::Unsubscribe)},
        {120, -1, -1, sizeof(::com::geotab::ioxproto::PubSubToGo)},
        {134, -1, -1, sizeof(::com::geotab::ioxproto::PubSubFromGo)},
        {148, -1, -1, sizeof(::com::geotab::ioxproto::IoxToGo)},
        {158, -1, -1, sizeof(::com::geotab::ioxproto::IoxFromGo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::com::geotab::ioxproto::_SubAck_default_instance_._instance,
    &::com::geotab::ioxproto::_TopicInfo_default_instance_._instance,
    &::com::geotab::ioxproto::_TopicList_default_instance_._instance,
    &::com::geotab::ioxproto::_TopicInfoList_default_instance_._instance,
    &::com::geotab::ioxproto::_ClearSubsAck_default_instance_._instance,
    &::com::geotab::ioxproto::_Vec3_default_instance_._instance,
    &::com::geotab::ioxproto::_Gps_default_instance_._instance,
    &::com::geotab::ioxproto::_Publish_default_instance_._instance,
    &::com::geotab::ioxproto::_Subscribe_default_instance_._instance,
    &::com::geotab::ioxproto::_Unsubscribe_default_instance_._instance,
    &::com::geotab::ioxproto::_PubSubToGo_default_instance_._instance,
    &::com::geotab::ioxproto::_PubSubFromGo_default_instance_._instance,
    &::com::geotab::ioxproto::_IoxToGo_default_instance_._instance,
    &::com::geotab::ioxproto::_IoxFromGo_default_instance_._instance,
};
const char descriptor_table_protodef_iox_5fmessaging_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023iox_messaging.proto\022\023com.geotab.ioxpro"
    "to\032\037google/protobuf/timestamp.proto\032\033goo"
    "gle/protobuf/empty.proto\"\366\002\n\006SubAck\0222\n\006r"
    "esult\030\001 \001(\0162\".com.geotab.ioxproto.SubAck"
    ".Result\022)\n\005topic\030\002 \001(\0162\032.com.geotab.ioxp"
    "roto.Topic\"\214\002\n\006Result\022\036\n\032SUB_ACK_RESULT_"
    "UNSPECIFIED\020\000\022\032\n\026SUB_ACK_RESULT_SUCCESS\020"
    "\001\022\031\n\025SUB_ACK_RESULT_FAILED\020\002\022 \n\034SUB_ACK_"
    "RESULT_UNKNOWN_TOPIC\020\003\022\'\n#SUB_ACK_RESULT"
    "_TOPIC_ALREADY_SUBBED\020\004\022#\n\037SUB_ACK_RESUL"
    "T_TOPIC_NOT_SUBBED\020\005\022\036\n\032SUB_ACK_RESULT_U"
    "NAVAILABLE\020\006\022\033\n\027SUB_ACK_RESULT_DISABLED\020"
    "\007\"6\n\tTopicInfo\022)\n\005topic\030\001 \001(\0162\032.com.geot"
    "ab.ioxproto.Topic\"7\n\tTopicList\022*\n\006topics"
    "\030\001 \003(\0162\032.com.geotab.ioxproto.Topic\"\?\n\rTo"
    "picInfoList\022.\n\006topics\030\001 \003(\0132\036.com.geotab"
    ".ioxproto.TopicInfo\"\350\001\n\014ClearSubsAck\0228\n\006"
    "result\030\001 \001(\0162(.com.geotab.ioxproto.Clear"
    "SubsAck.Result\"\235\001\n\006Result\022%\n!CLEAR_SUBS_"
    "ACK_RESULT_UNSPECIFIED\020\000\022!\n\035CLEAR_SUBS_A"
    "CK_RESULT_SUCCESS\020\001\022%\n!CLEAR_SUBS_ACK_RE"
    "SULT_UNAVAILABLE\020\002\022\"\n\036CLEAR_SUBS_ACK_RES"
    "ULT_DISABLED\020\003\"\'\n\004Vec3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002"
    " \001(\002\022\t\n\001z\030\003 \001(\002\"x\n\003Gps\022\020\n\010latitude\030\001 \001(\002"
    "\022\021\n\tlongitude\030\002 \001(\002\022\r\n\005speed\030\003 \001(\002\022\017\n\007he"
    "ading\030\004 \001(\002\022,\n\010gps_time\030\005 \001(\0132\032.google.p"
    "rotobuf.Timestamp\"\267\002\n\007Publish\022(\n\004time\030\001 "
    "\001(\0132\032.google.protobuf.Timestamp\022)\n\005topic"
    "\030\002 \001(\0162\032.com.geotab.ioxproto.Topic\022\024\n\nbo"
    "ol_value\030\003 \001(\010H\000\022\023\n\tint_value\030\004 \001(\005H\000\022\024\n"
    "\nuint_value\030\005 \001(\rH\000\022\025\n\013float_value\030\006 \001(\002"
    "H\000\022\026\n\014string_value\030\007 \001(\tH\000\022/\n\nvec3_value"
    "\030\010 \001(\0132\031.com.geotab.ioxproto.Vec3H\000\022-\n\tg"
    "ps_value\030\t \001(\0132\030.com.geotab.ioxproto.Gps"
    "H\000B\007\n\005value\"6\n\tSubscribe\022)\n\005topic\030\001 \001(\0162"
    "\032.com.geotab.ioxproto.Topic\"8\n\013Unsubscri"
    "be\022)\n\005topic\030\001 \001(\0162\032.com.geotab.ioxproto."
    "Topic\"\205\002\n\nPubSubToGo\022-\n\003sub\030\001 \001(\0132\036.com."
    "geotab.ioxproto.SubscribeH\000\0221\n\005unsub\030\002 \001"
    "(\0132 .com.geotab.ioxproto.UnsubscribeH\000\022+"
    "\n\tlist_subs\030\003 \001(\0132\026.google.protobuf.Empt"
    "yH\000\022,\n\nclear_subs\030\004 \001(\0132\026.google.protobu"
    "f.EmptyH\000\0223\n\021list_avail_topics\030\005 \001(\0132\026.g"
    "oogle.protobuf.EmptyH\000B\005\n\003msg\"\244\002\n\014PubSub"
    "FromGo\022.\n\007sub_ack\030\001 \001(\0132\033.com.geotab.iox"
    "proto.SubAckH\000\0224\n\ntopic_list\030\002 \001(\0132\036.com"
    ".geotab.ioxproto.TopicListH\000\022=\n\017topic_in"
    "fo_list\030\003 \001(\0132\".com.geotab.ioxproto.Topi"
    "cInfoListH\000\022+\n\003pub\030\004 \001(\0132\034.com.geotab.io"
    "xproto.PublishH\000\022;\n\016clear_subs_ack\030\005 \001(\013"
    "2!.com.geotab.ioxproto.ClearSubsAckH\000B\005\n"
    "\003msg\"D\n\007IoxToGo\0222\n\007pub_sub\030\001 \001(\0132\037.com.g"
    "eotab.ioxproto.PubSubToGoH\000B\005\n\003msg\"H\n\tIo"
    "xFromGo\0224\n\007pub_sub\030\001 \001(\0132!.com.geotab.io"
    "xproto.PubSubFromGoH\000B\005\n\003msg*\374\004\n\005Topic\022\025"
    "\n\021TOPIC_UNSPECIFIED\020\000\022\017\n\013TOPIC_ACCEL\020\001\022\r"
    "\n\tTOPIC_GPS\020\002\022\031\n\025TOPIC_BATTERY_VOLTAGE\020\003"
    "\022\r\n\tTOPIC_VIN\020\004\022\016\n\nTOPIC_GEAR\020\005\022\026\n\022TOPIC"
    "_ENGINE_SPEED\020\006\022\025\n\021TOPIC_ENGINE_LOAD\020\007\022\022"
    "\n\016TOPIC_ODOMETER\020\010\022 \n\034TOPIC_ACCEL_PEDAL_"
    "PERCENTAGE\020\t\022\026\n\022TOPIC_COOLANT_TEMP\020\n\022\035\n\031"
    "TOPIC_DOC_INTAKE_GAS_TEMP\020\013\022\035\n\031TOPIC_DOC"
    "_OUTLET_GAS_TEMP\020\014\022\031\n\025TOPIC_FUELTANK1_UN"
    "ITS\020\r\022\031\n\025TOPIC_FUELTANK2_UNITS\020\016\022\033\n\027TOPI"
    "C_FUELTANK1_PERCENT\020\017\022\033\n\027TOPIC_FUELTANK2"
    "_PERCENT\020\020\022\031\n\025TOPIC_STATE_OF_CHARGE\020\021\022\033\n"
    "\027TOPIC_ENGINE_ROAD_SPEED\020\022\022\030\n\024TOPIC_VEHI"
    "CLE_ACTIVE\020\023\022\031\n\025TOPIC_DRIVER_SEATBELT\020\024\022"
    "\032\n\026TOPIC_LEFT_TURN_SIGNAL\020\025\022\033\n\027TOPIC_RIG"
    "HT_TURN_SIGNAL\020\026\022\033\n\027TOPIC_EV_CHARGING_ST"
    "ATE\020\027\022\024\n\020TOPIC_PARK_BRAKE\020\030b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_iox_5fmessaging_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_iox_5fmessaging_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_iox_5fmessaging_2eproto = {
    false,
    false,
    2835,
    descriptor_table_protodef_iox_5fmessaging_2eproto,
    "iox_messaging.proto",
    &descriptor_table_iox_5fmessaging_2eproto_once,
    descriptor_table_iox_5fmessaging_2eproto_deps,
    2,
    14,
    schemas,
    file_default_instances,
    TableStruct_iox_5fmessaging_2eproto::offsets,
    file_level_enum_descriptors_iox_5fmessaging_2eproto,
    file_level_service_descriptors_iox_5fmessaging_2eproto,
};
namespace com {
namespace geotab {
namespace ioxproto {
const ::google::protobuf::EnumDescriptor* SubAck_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_iox_5fmessaging_2eproto);
  return file_level_enum_descriptors_iox_5fmessaging_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SubAck_Result_internal_data_[] = {
    524288u, 0u, };
bool SubAck_Result_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SubAck_Result SubAck::SUB_ACK_RESULT_UNSPECIFIED;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_SUCCESS;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_FAILED;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_UNKNOWN_TOPIC;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_TOPIC_ALREADY_SUBBED;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_TOPIC_NOT_SUBBED;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_UNAVAILABLE;
constexpr SubAck_Result SubAck::SUB_ACK_RESULT_DISABLED;
constexpr SubAck_Result SubAck::Result_MIN;
constexpr SubAck_Result SubAck::Result_MAX;
constexpr int SubAck::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ClearSubsAck_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_iox_5fmessaging_2eproto);
  return file_level_enum_descriptors_iox_5fmessaging_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ClearSubsAck_Result_internal_data_[] = {
    262144u, 0u, };
bool ClearSubsAck_Result_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ClearSubsAck_Result ClearSubsAck::CLEAR_SUBS_ACK_RESULT_UNSPECIFIED;
constexpr ClearSubsAck_Result ClearSubsAck::CLEAR_SUBS_ACK_RESULT_SUCCESS;
constexpr ClearSubsAck_Result ClearSubsAck::CLEAR_SUBS_ACK_RESULT_UNAVAILABLE;
constexpr ClearSubsAck_Result ClearSubsAck::CLEAR_SUBS_ACK_RESULT_DISABLED;
constexpr ClearSubsAck_Result ClearSubsAck::Result_MIN;
constexpr ClearSubsAck_Result ClearSubsAck::Result_MAX;
constexpr int ClearSubsAck::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Topic_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_iox_5fmessaging_2eproto);
  return file_level_enum_descriptors_iox_5fmessaging_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Topic_internal_data_[] = {
    1638400u, 0u, };
bool Topic_IsValid(int value) {
  return 0 <= value && value <= 24;
}
// ===================================================================

class SubAck::_Internal {
 public:
};

SubAck::SubAck(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.SubAck)
}
SubAck::SubAck(
    ::google::protobuf::Arena* arena, const SubAck& from)
    : SubAck(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SubAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SubAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, topic_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::topic_));
}
SubAck::~SubAck() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.SubAck)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubAck::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SubAck::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SubAck, _impl_._cached_size_),
              false,
          },
          &SubAck::MergeImpl,
          &SubAck::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SubAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SubAck_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::SubAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .com.geotab.ioxproto.Topic topic = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubAck, _impl_.topic_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubAck, _impl_.topic_)}},
    // .com.geotab.ioxproto.SubAck.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubAck, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubAck, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.SubAck.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(SubAck, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .com.geotab.ioxproto.Topic topic = 2;
    {PROTOBUF_FIELD_OFFSET(SubAck, _impl_.topic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SubAck::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.SubAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.result_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.topic_) -
      reinterpret_cast<char*>(&_impl_.result_)) + sizeof(_impl_.topic_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SubAck::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.SubAck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.SubAck.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  // .com.geotab.ioxproto.Topic topic = 2;
  if (this->_internal_topic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.SubAck)
  return target;
}

::size_t SubAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.SubAck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .com.geotab.ioxproto.SubAck.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  // .com.geotab.ioxproto.Topic topic = 2;
  if (this->_internal_topic() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_topic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SubAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubAck*>(&to_msg);
  auto& from = static_cast<const SubAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.SubAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  if (from._internal_topic() != 0) {
    _this->_impl_.topic_ = from._impl_.topic_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubAck::CopyFrom(const SubAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.SubAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubAck::InternalSwap(SubAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubAck, _impl_.topic_)
      + sizeof(SubAck::_impl_.topic_)
      - PROTOBUF_FIELD_OFFSET(SubAck, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata SubAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TopicInfo::_Internal {
 public:
};

TopicInfo::TopicInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.TopicInfo)
}
TopicInfo::TopicInfo(
    ::google::protobuf::Arena* arena, const TopicInfo& from)
    : TopicInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TopicInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TopicInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.topic_ = {};
}
TopicInfo::~TopicInfo() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.TopicInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TopicInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TopicInfo, _impl_._cached_size_),
              false,
          },
          &TopicInfo::MergeImpl,
          &TopicInfo::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TopicInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TopicInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::TopicInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .com.geotab.ioxproto.Topic topic = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TopicInfo, _impl_.topic_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TopicInfo, _impl_.topic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.Topic topic = 1;
    {PROTOBUF_FIELD_OFFSET(TopicInfo, _impl_.topic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TopicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.TopicInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TopicInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.TopicInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.Topic topic = 1;
  if (this->_internal_topic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.TopicInfo)
  return target;
}

::size_t TopicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.TopicInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.geotab.ioxproto.Topic topic = 1;
  if (this->_internal_topic() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_topic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TopicInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TopicInfo*>(&to_msg);
  auto& from = static_cast<const TopicInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.TopicInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_topic() != 0) {
    _this->_impl_.topic_ = from._impl_.topic_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicInfo::CopyFrom(const TopicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.TopicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TopicInfo::InternalSwap(TopicInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.topic_, other->_impl_.topic_);
}

::google::protobuf::Metadata TopicInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TopicList::_Internal {
 public:
};

TopicList::TopicList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.TopicList)
}
inline PROTOBUF_NDEBUG_INLINE TopicList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::TopicList& from_msg)
      : topics_{visibility, arena, from.topics_},
        _topics_cached_byte_size_{0},
        _cached_size_{0} {}

TopicList::TopicList(
    ::google::protobuf::Arena* arena,
    const TopicList& from)
    : ::google::protobuf::Message(arena) {
  TopicList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.TopicList)
}
inline PROTOBUF_NDEBUG_INLINE TopicList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topics_{visibility, arena},
        _topics_cached_byte_size_{0},
        _cached_size_{0} {}

inline void TopicList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TopicList::~TopicList() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.TopicList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TopicList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TopicList, _impl_._cached_size_),
              false,
          },
          &TopicList::MergeImpl,
          &TopicList::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TopicList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TopicList_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::TopicList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .com.geotab.ioxproto.Topic topics = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TopicList, _impl_.topics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .com.geotab.ioxproto.Topic topics = 1;
    {PROTOBUF_FIELD_OFFSET(TopicList, _impl_.topics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TopicList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.TopicList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topics_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TopicList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.TopicList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .com.geotab.ioxproto.Topic topics = 1;
  {
    std::size_t byte_size = _impl_._topics_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_topics(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.TopicList)
  return target;
}

::size_t TopicList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.TopicList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .com.geotab.ioxproto.Topic topics = 1;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_topics_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_topics().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._topics_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TopicList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TopicList*>(&to_msg);
  auto& from = static_cast<const TopicList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.TopicList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topics()->MergeFrom(from._internal_topics());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicList::CopyFrom(const TopicList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.TopicList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TopicList::InternalSwap(TopicList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
}

::google::protobuf::Metadata TopicList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TopicInfoList::_Internal {
 public:
};

TopicInfoList::TopicInfoList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.TopicInfoList)
}
inline PROTOBUF_NDEBUG_INLINE TopicInfoList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::TopicInfoList& from_msg)
      : topics_{visibility, arena, from.topics_},
        _cached_size_{0} {}

TopicInfoList::TopicInfoList(
    ::google::protobuf::Arena* arena,
    const TopicInfoList& from)
    : ::google::protobuf::Message(arena) {
  TopicInfoList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.TopicInfoList)
}
inline PROTOBUF_NDEBUG_INLINE TopicInfoList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : topics_{visibility, arena},
        _cached_size_{0} {}

inline void TopicInfoList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TopicInfoList::~TopicInfoList() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.TopicInfoList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TopicInfoList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TopicInfoList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TopicInfoList, _impl_._cached_size_),
              false,
          },
          &TopicInfoList::MergeImpl,
          &TopicInfoList::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TopicInfoList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TopicInfoList_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::TopicInfoList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .com.geotab.ioxproto.TopicInfo topics = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TopicInfoList, _impl_.topics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .com.geotab.ioxproto.TopicInfo topics = 1;
    {PROTOBUF_FIELD_OFFSET(TopicInfoList, _impl_.topics_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::TopicInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TopicInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.TopicInfoList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topics_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TopicInfoList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.TopicInfoList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .com.geotab.ioxproto.TopicInfo topics = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_topics_size());
       i < n; i++) {
    const auto& repfield = this->_internal_topics().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.TopicInfoList)
  return target;
}

::size_t TopicInfoList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.TopicInfoList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .com.geotab.ioxproto.TopicInfo topics = 1;
  total_size += 1UL * this->_internal_topics_size();
  for (const auto& msg : this->_internal_topics()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TopicInfoList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TopicInfoList*>(&to_msg);
  auto& from = static_cast<const TopicInfoList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.TopicInfoList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_topics()->MergeFrom(
      from._internal_topics());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TopicInfoList::CopyFrom(const TopicInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.TopicInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TopicInfoList::InternalSwap(TopicInfoList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.topics_.InternalSwap(&other->_impl_.topics_);
}

::google::protobuf::Metadata TopicInfoList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClearSubsAck::_Internal {
 public:
};

ClearSubsAck::ClearSubsAck(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.ClearSubsAck)
}
ClearSubsAck::ClearSubsAck(
    ::google::protobuf::Arena* arena, const ClearSubsAck& from)
    : ClearSubsAck(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ClearSubsAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClearSubsAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
ClearSubsAck::~ClearSubsAck() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.ClearSubsAck)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ClearSubsAck::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ClearSubsAck::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ClearSubsAck, _impl_._cached_size_),
              false,
          },
          &ClearSubsAck::MergeImpl,
          &ClearSubsAck::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ClearSubsAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ClearSubsAck_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::ClearSubsAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .com.geotab.ioxproto.ClearSubsAck.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClearSubsAck, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClearSubsAck, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.ClearSubsAck.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(ClearSubsAck, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ClearSubsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.ClearSubsAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ClearSubsAck::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.ClearSubsAck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.ClearSubsAck.Result result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.ClearSubsAck)
  return target;
}

::size_t ClearSubsAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.ClearSubsAck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.geotab.ioxproto.ClearSubsAck.Result result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ClearSubsAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClearSubsAck*>(&to_msg);
  auto& from = static_cast<const ClearSubsAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.ClearSubsAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClearSubsAck::CopyFrom(const ClearSubsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.ClearSubsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClearSubsAck::InternalSwap(ClearSubsAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata ClearSubsAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vec3::_Internal {
 public:
};

Vec3::Vec3(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.Vec3)
}
Vec3::Vec3(
    ::google::protobuf::Arena* arena, const Vec3& from)
    : Vec3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vec3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vec3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vec3::~Vec3() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.Vec3)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Vec3::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Vec3::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Vec3, _impl_._cached_size_),
              false,
          },
          &Vec3::MergeImpl,
          &Vec3::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vec3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Vec3_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Vec3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.Vec3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Vec3::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.Vec3)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.Vec3)
  return target;
}

::size_t Vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.Vec3)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // float x = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Vec3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vec3*>(&to_msg);
  auto& from = static_cast<const Vec3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.Vec3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vec3::CopyFrom(const Vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.Vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vec3::InternalSwap(Vec3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec3, _impl_.z_)
      + sizeof(Vec3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vec3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vec3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Gps::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Gps>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Gps, _impl_._has_bits_);
};

void Gps::clear_gps_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.gps_time_ != nullptr) _impl_.gps_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Gps::Gps(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.Gps)
}
inline PROTOBUF_NDEBUG_INLINE Gps::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::Gps& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Gps::Gps(
    ::google::protobuf::Arena* arena,
    const Gps& from)
    : ::google::protobuf::Message(arena) {
  Gps* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gps_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.gps_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, latitude_),
           offsetof(Impl_, heading_) -
               offsetof(Impl_, latitude_) +
               sizeof(Impl_::heading_));

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.Gps)
}
inline PROTOBUF_NDEBUG_INLINE Gps::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Gps::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gps_time_),
           0,
           offsetof(Impl_, heading_) -
               offsetof(Impl_, gps_time_) +
               sizeof(Impl_::heading_));
}
Gps::~Gps() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.Gps)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Gps::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.gps_time_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Gps::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Gps, _impl_._cached_size_),
              false,
          },
          &Gps::MergeImpl,
          &Gps::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> Gps::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Gps, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Gps_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Gps>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float latitude = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Gps, _impl_.latitude_)}},
    // float longitude = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Gps, _impl_.longitude_)}},
    // float speed = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Gps, _impl_.speed_)}},
    // float heading = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Gps, _impl_.heading_)}},
    // .google.protobuf.Timestamp gps_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Gps, _impl_.gps_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float latitude = 1;
    {PROTOBUF_FIELD_OFFSET(Gps, _impl_.latitude_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float longitude = 2;
    {PROTOBUF_FIELD_OFFSET(Gps, _impl_.longitude_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float speed = 3;
    {PROTOBUF_FIELD_OFFSET(Gps, _impl_.speed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float heading = 4;
    {PROTOBUF_FIELD_OFFSET(Gps, _impl_.heading_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .google.protobuf.Timestamp gps_time = 5;
    {PROTOBUF_FIELD_OFFSET(Gps, _impl_.gps_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Gps::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.Gps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.gps_time_ != nullptr);
    _impl_.gps_time_->Clear();
  }
  ::memset(&_impl_.latitude_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.heading_) -
      reinterpret_cast<char*>(&_impl_.latitude_)) + sizeof(_impl_.heading_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Gps::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.Gps)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float latitude = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_latitude(), target);
  }

  // float longitude = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_longitude(), target);
  }

  // float speed = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_speed(), target);
  }

  // float heading = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_heading = this->_internal_heading();
  ::uint32_t raw_heading;
  memcpy(&raw_heading, &tmp_heading, sizeof(tmp_heading));
  if (raw_heading != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_heading(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp gps_time = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.gps_time_, _impl_.gps_time_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.Gps)
  return target;
}

::size_t Gps::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.Gps)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .google.protobuf.Timestamp gps_time = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.gps_time_);
  }

  // float latitude = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = this->_internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    total_size += 5;
  }

  // float longitude = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = this->_internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    total_size += 5;
  }

  // float speed = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = this->_internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    total_size += 5;
  }

  // float heading = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_heading = this->_internal_heading();
  ::uint32_t raw_heading;
  memcpy(&raw_heading, &tmp_heading, sizeof(tmp_heading));
  if (raw_heading != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Gps::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Gps*>(&to_msg);
  auto& from = static_cast<const Gps&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.Gps)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.gps_time_ != nullptr);
    if (_this->_impl_.gps_time_ == nullptr) {
      _this->_impl_.gps_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.gps_time_);
    } else {
      _this->_impl_.gps_time_->MergeFrom(*from._impl_.gps_time_);
    }
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_latitude = from._internal_latitude();
  ::uint32_t raw_latitude;
  memcpy(&raw_latitude, &tmp_latitude, sizeof(tmp_latitude));
  if (raw_latitude != 0) {
    _this->_impl_.latitude_ = from._impl_.latitude_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_longitude = from._internal_longitude();
  ::uint32_t raw_longitude;
  memcpy(&raw_longitude, &tmp_longitude, sizeof(tmp_longitude));
  if (raw_longitude != 0) {
    _this->_impl_.longitude_ = from._impl_.longitude_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_speed = from._internal_speed();
  ::uint32_t raw_speed;
  memcpy(&raw_speed, &tmp_speed, sizeof(tmp_speed));
  if (raw_speed != 0) {
    _this->_impl_.speed_ = from._impl_.speed_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_heading = from._internal_heading();
  ::uint32_t raw_heading;
  memcpy(&raw_heading, &tmp_heading, sizeof(tmp_heading));
  if (raw_heading != 0) {
    _this->_impl_.heading_ = from._impl_.heading_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Gps::CopyFrom(const Gps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.Gps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Gps::InternalSwap(Gps* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Gps, _impl_.heading_)
      + sizeof(Gps::_impl_.heading_)
      - PROTOBUF_FIELD_OFFSET(Gps, _impl_.gps_time_)>(
          reinterpret_cast<char*>(&_impl_.gps_time_),
          reinterpret_cast<char*>(&other->_impl_.gps_time_));
}

::google::protobuf::Metadata Gps::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Publish::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Publish>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Publish, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::Publish, _impl_._oneof_case_);
};

void Publish::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Publish::set_allocated_vec3_value(::com::geotab::ioxproto::Vec3* vec3_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (vec3_value) {
    ::google::protobuf::Arena* submessage_arena = vec3_value->GetArena();
    if (message_arena != submessage_arena) {
      vec3_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, vec3_value, submessage_arena);
    }
    set_has_vec3_value();
    _impl_.value_.vec3_value_ = vec3_value;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.Publish.vec3_value)
}
void Publish::set_allocated_gps_value(::com::geotab::ioxproto::Gps* gps_value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (gps_value) {
    ::google::protobuf::Arena* submessage_arena = gps_value->GetArena();
    if (message_arena != submessage_arena) {
      gps_value = ::google::protobuf::internal::GetOwnedMessage(message_arena, gps_value, submessage_arena);
    }
    set_has_gps_value();
    _impl_.value_.gps_value_ = gps_value;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.Publish.gps_value)
}
Publish::Publish(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.Publish)
}
inline PROTOBUF_NDEBUG_INLINE Publish::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::Publish& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_{},
        _oneof_case_{from._oneof_case_[0]} {}

Publish::Publish(
    ::google::protobuf::Arena* arena,
    const Publish& from)
    : ::google::protobuf::Message(arena) {
  Publish* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.topic_ = from._impl_.topic_;
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kBoolValue:
        _impl_.value_.bool_value_ = from._impl_.value_.bool_value_;
        break;
      case kIntValue:
        _impl_.value_.int_value_ = from._impl_.value_.int_value_;
        break;
      case kUintValue:
        _impl_.value_.uint_value_ = from._impl_.value_.uint_value_;
        break;
      case kFloatValue:
        _impl_.value_.float_value_ = from._impl_.value_.float_value_;
        break;
      case kStringValue:
        new (&_impl_.value_.string_value_) decltype(_impl_.value_.string_value_){arena, from._impl_.value_.string_value_};
        break;
      case kVec3Value:
        _impl_.value_.vec3_value_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Vec3>(arena, *from._impl_.value_.vec3_value_);
        break;
      case kGpsValue:
        _impl_.value_.gps_value_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Gps>(arena, *from._impl_.value_.gps_value_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.Publish)
}
inline PROTOBUF_NDEBUG_INLINE Publish::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        value_{},
        _oneof_case_{} {}

inline void Publish::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, topic_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::topic_));
}
Publish::~Publish() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.Publish)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Publish::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.time_;
  if (has_value()) {
    clear_value();
  }
  _impl_.~Impl_();
}

void Publish::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:com.geotab.ioxproto.Publish)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kUintValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      _impl_.value_.string_value_.Destroy();
      break;
    }
    case kVec3Value: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.vec3_value_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.vec3_value_);
      }
      break;
    }
    case kGpsValue: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.gps_value_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.gps_value_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Publish::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Publish, _impl_._cached_size_),
              false,
          },
          &Publish::MergeImpl,
          &Publish::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 9, 3, 56, 2> Publish::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Publish, _impl_._has_bits_),
    0, // no _extensions_
    9, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Publish_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Publish>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .com.geotab.ioxproto.Topic topic = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Publish, _impl_.topic_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Publish, _impl_.topic_)}},
    // .google.protobuf.Timestamp time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Publish, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp time = 1;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.Topic topic = 2;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.topic_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool bool_value = 3;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.bool_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // int32 int_value = 4;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.int_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // uint32 uint_value = 5;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.uint_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // float float_value = 6;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.float_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // string string_value = 7;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.string_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .com.geotab.ioxproto.Vec3 vec3_value = 8;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.vec3_value_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.Gps gps_value = 9;
    {PROTOBUF_FIELD_OFFSET(Publish, _impl_.value_.gps_value_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Vec3>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Gps>()},
  }}, {{
    "\33\0\0\0\0\0\0\14\0\0\0\0\0\0\0\0"
    "com.geotab.ioxproto.Publish"
    "string_value"
  }},
};

PROTOBUF_NOINLINE void Publish::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.Publish)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_ != nullptr);
    _impl_.time_->Clear();
  }
  _impl_.topic_ = 0;
  clear_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Publish::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.Publish)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.time_, _impl_.time_->GetCachedSize(), target, stream);
  }

  // .com.geotab.ioxproto.Topic topic = 2;
  if (this->_internal_topic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_topic(), target);
  }

  switch (value_case()) {
    case kBoolValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this->_internal_bool_value(), target);
      break;
    }
    case kIntValue: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<4>(
              stream, this->_internal_int_value(), target);
      break;
    }
    case kUintValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this->_internal_uint_value(), target);
      break;
    }
    case kFloatValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          6, this->_internal_float_value(), target);
      break;
    }
    case kStringValue: {
      const std::string& _s = this->_internal_string_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "com.geotab.ioxproto.Publish.string_value");
      target = stream->WriteStringMaybeAliased(7, _s, target);
      break;
    }
    case kVec3Value: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *_impl_.value_.vec3_value_, _impl_.value_.vec3_value_->GetCachedSize(), target, stream);
      break;
    }
    case kGpsValue: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *_impl_.value_.gps_value_, _impl_.value_.gps_value_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.Publish)
  return target;
}

::size_t Publish::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.Publish)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .google.protobuf.Timestamp time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.time_);
  }

  // .com.geotab.ioxproto.Topic topic = 2;
  if (this->_internal_topic() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_topic());
  }

  switch (value_case()) {
    // bool bool_value = 3;
    case kBoolValue: {
      total_size += 2;
      break;
    }
    // int32 int_value = 4;
    case kIntValue: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_int_value());
      break;
    }
    // uint32 uint_value = 5;
    case kUintValue: {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_uint_value());
      break;
    }
    // float float_value = 6;
    case kFloatValue: {
      total_size += 5;
      break;
    }
    // string string_value = 7;
    case kStringValue: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_string_value());
      break;
    }
    // .com.geotab.ioxproto.Vec3 vec3_value = 8;
    case kVec3Value: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.vec3_value_);
      break;
    }
    // .com.geotab.ioxproto.Gps gps_value = 9;
    case kGpsValue: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.value_.gps_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Publish::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Publish*>(&to_msg);
  auto& from = static_cast<const Publish&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.Publish)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.time_ != nullptr);
    if (_this->_impl_.time_ == nullptr) {
      _this->_impl_.time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
    } else {
      _this->_impl_.time_->MergeFrom(*from._impl_.time_);
    }
  }
  if (from._internal_topic() != 0) {
    _this->_impl_.topic_ = from._impl_.topic_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kBoolValue: {
        _this->_impl_.value_.bool_value_ = from._impl_.value_.bool_value_;
        break;
      }
      case kIntValue: {
        _this->_impl_.value_.int_value_ = from._impl_.value_.int_value_;
        break;
      }
      case kUintValue: {
        _this->_impl_.value_.uint_value_ = from._impl_.value_.uint_value_;
        break;
      }
      case kFloatValue: {
        _this->_impl_.value_.float_value_ = from._impl_.value_.float_value_;
        break;
      }
      case kStringValue: {
        if (oneof_needs_init) {
          _this->_impl_.value_.string_value_.InitDefault();
        }
        _this->_impl_.value_.string_value_.Set(from._internal_string_value(), arena);
        break;
      }
      case kVec3Value: {
        if (oneof_needs_init) {
          _this->_impl_.value_.vec3_value_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Vec3>(arena, *from._impl_.value_.vec3_value_);
        } else {
          _this->_impl_.value_.vec3_value_->MergeFrom(from._internal_vec3_value());
        }
        break;
      }
      case kGpsValue: {
        if (oneof_needs_init) {
          _this->_impl_.value_.gps_value_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Gps>(arena, *from._impl_.value_.gps_value_);
        } else {
          _this->_impl_.value_.gps_value_->MergeFrom(from._internal_gps_value());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Publish::CopyFrom(const Publish& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.Publish)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Publish::InternalSwap(Publish* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Publish, _impl_.topic_)
      + sizeof(Publish::_impl_.topic_)
      - PROTOBUF_FIELD_OFFSET(Publish, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Publish::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Subscribe::_Internal {
 public:
};

Subscribe::Subscribe(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.Subscribe)
}
Subscribe::Subscribe(
    ::google::protobuf::Arena* arena, const Subscribe& from)
    : Subscribe(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Subscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Subscribe::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.topic_ = {};
}
Subscribe::~Subscribe() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.Subscribe)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Subscribe::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Subscribe::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Subscribe, _impl_._cached_size_),
              false,
          },
          &Subscribe::MergeImpl,
          &Subscribe::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Subscribe::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Subscribe_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Subscribe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .com.geotab.ioxproto.Topic topic = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Subscribe, _impl_.topic_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.topic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.Topic topic = 1;
    {PROTOBUF_FIELD_OFFSET(Subscribe, _impl_.topic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Subscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.Subscribe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Subscribe::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.Subscribe)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.Topic topic = 1;
  if (this->_internal_topic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.Subscribe)
  return target;
}

::size_t Subscribe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.Subscribe)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.geotab.ioxproto.Topic topic = 1;
  if (this->_internal_topic() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_topic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Subscribe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Subscribe*>(&to_msg);
  auto& from = static_cast<const Subscribe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.Subscribe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_topic() != 0) {
    _this->_impl_.topic_ = from._impl_.topic_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Subscribe::CopyFrom(const Subscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.Subscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Subscribe::InternalSwap(Subscribe* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.topic_, other->_impl_.topic_);
}

::google::protobuf::Metadata Subscribe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Unsubscribe::_Internal {
 public:
};

Unsubscribe::Unsubscribe(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.Unsubscribe)
}
Unsubscribe::Unsubscribe(
    ::google::protobuf::Arena* arena, const Unsubscribe& from)
    : Unsubscribe(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Unsubscribe::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Unsubscribe::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.topic_ = {};
}
Unsubscribe::~Unsubscribe() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.Unsubscribe)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Unsubscribe::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Unsubscribe::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_._cached_size_),
              false,
          },
          &Unsubscribe::MergeImpl,
          &Unsubscribe::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Unsubscribe::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Unsubscribe_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Unsubscribe>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .com.geotab.ioxproto.Topic topic = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Unsubscribe, _impl_.topic_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_.topic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.Topic topic = 1;
    {PROTOBUF_FIELD_OFFSET(Unsubscribe, _impl_.topic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Unsubscribe::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.Unsubscribe)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.topic_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Unsubscribe::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.Unsubscribe)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.Topic topic = 1;
  if (this->_internal_topic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_topic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.Unsubscribe)
  return target;
}

::size_t Unsubscribe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.Unsubscribe)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .com.geotab.ioxproto.Topic topic = 1;
  if (this->_internal_topic() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_topic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Unsubscribe::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Unsubscribe*>(&to_msg);
  auto& from = static_cast<const Unsubscribe&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.Unsubscribe)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_topic() != 0) {
    _this->_impl_.topic_ = from._impl_.topic_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Unsubscribe::CopyFrom(const Unsubscribe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.Unsubscribe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Unsubscribe::InternalSwap(Unsubscribe* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.topic_, other->_impl_.topic_);
}

::google::protobuf::Metadata Unsubscribe::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PubSubToGo::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubToGo, _impl_._oneof_case_);
};

void PubSubToGo::set_allocated_sub(::com::geotab::ioxproto::Subscribe* sub) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (sub) {
    ::google::protobuf::Arena* submessage_arena = sub->GetArena();
    if (message_arena != submessage_arena) {
      sub = ::google::protobuf::internal::GetOwnedMessage(message_arena, sub, submessage_arena);
    }
    set_has_sub();
    _impl_.msg_.sub_ = sub;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubToGo.sub)
}
void PubSubToGo::set_allocated_unsub(::com::geotab::ioxproto::Unsubscribe* unsub) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (unsub) {
    ::google::protobuf::Arena* submessage_arena = unsub->GetArena();
    if (message_arena != submessage_arena) {
      unsub = ::google::protobuf::internal::GetOwnedMessage(message_arena, unsub, submessage_arena);
    }
    set_has_unsub();
    _impl_.msg_.unsub_ = unsub;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubToGo.unsub)
}
void PubSubToGo::set_allocated_list_subs(::google::protobuf::Empty* list_subs) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (list_subs) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(list_subs)->GetArena();
    if (message_arena != submessage_arena) {
      list_subs = ::google::protobuf::internal::GetOwnedMessage(message_arena, list_subs, submessage_arena);
    }
    set_has_list_subs();
    _impl_.msg_.list_subs_ = list_subs;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubToGo.list_subs)
}
void PubSubToGo::clear_list_subs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kListSubs) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.list_subs_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.list_subs_);
    }
    clear_has_msg();
  }
}
void PubSubToGo::set_allocated_clear_subs(::google::protobuf::Empty* clear_subs) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (clear_subs) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(clear_subs)->GetArena();
    if (message_arena != submessage_arena) {
      clear_subs = ::google::protobuf::internal::GetOwnedMessage(message_arena, clear_subs, submessage_arena);
    }
    set_has_clear_subs();
    _impl_.msg_.clear_subs_ = clear_subs;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubToGo.clear_subs)
}
void PubSubToGo::clear_clear_subs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kClearSubs) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.clear_subs_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.clear_subs_);
    }
    clear_has_msg();
  }
}
void PubSubToGo::set_allocated_list_avail_topics(::google::protobuf::Empty* list_avail_topics) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (list_avail_topics) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(list_avail_topics)->GetArena();
    if (message_arena != submessage_arena) {
      list_avail_topics = ::google::protobuf::internal::GetOwnedMessage(message_arena, list_avail_topics, submessage_arena);
    }
    set_has_list_avail_topics();
    _impl_.msg_.list_avail_topics_ = list_avail_topics;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubToGo.list_avail_topics)
}
void PubSubToGo::clear_list_avail_topics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kListAvailTopics) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.list_avail_topics_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.list_avail_topics_);
    }
    clear_has_msg();
  }
}
PubSubToGo::PubSubToGo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.PubSubToGo)
}
inline PROTOBUF_NDEBUG_INLINE PubSubToGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::PubSubToGo& from_msg)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PubSubToGo::PubSubToGo(
    ::google::protobuf::Arena* arena,
    const PubSubToGo& from)
    : ::google::protobuf::Message(arena) {
  PubSubToGo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kSub:
        _impl_.msg_.sub_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Subscribe>(arena, *from._impl_.msg_.sub_);
        break;
      case kUnsub:
        _impl_.msg_.unsub_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Unsubscribe>(arena, *from._impl_.msg_.unsub_);
        break;
      case kListSubs:
        _impl_.msg_.list_subs_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.msg_.list_subs_);
        break;
      case kClearSubs:
        _impl_.msg_.clear_subs_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.msg_.clear_subs_);
        break;
      case kListAvailTopics:
        _impl_.msg_.list_avail_topics_ = ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.msg_.list_avail_topics_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.PubSubToGo)
}
inline PROTOBUF_NDEBUG_INLINE PubSubToGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PubSubToGo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PubSubToGo::~PubSubToGo() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.PubSubToGo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PubSubToGo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
  _impl_.~Impl_();
}

void PubSubToGo::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:com.geotab.ioxproto.PubSubToGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (msg_case()) {
    case kSub: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.sub_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.sub_);
      }
      break;
    }
    case kUnsub: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.unsub_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.unsub_);
      }
      break;
    }
    case kListSubs: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.list_subs_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.list_subs_);
      }
      break;
    }
    case kClearSubs: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.clear_subs_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.clear_subs_);
      }
      break;
    }
    case kListAvailTopics: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.list_avail_topics_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.list_avail_topics_);
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
PubSubToGo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PubSubToGo, _impl_._cached_size_),
              false,
          },
          &PubSubToGo::MergeImpl,
          &PubSubToGo::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> PubSubToGo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PubSubToGo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::PubSubToGo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.Subscribe sub = 1;
    {PROTOBUF_FIELD_OFFSET(PubSubToGo, _impl_.msg_.sub_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.Unsubscribe unsub = 2;
    {PROTOBUF_FIELD_OFFSET(PubSubToGo, _impl_.msg_.unsub_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Empty list_subs = 3;
    {PROTOBUF_FIELD_OFFSET(PubSubToGo, _impl_.msg_.list_subs_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Empty clear_subs = 4;
    {PROTOBUF_FIELD_OFFSET(PubSubToGo, _impl_.msg_.clear_subs_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Empty list_avail_topics = 5;
    {PROTOBUF_FIELD_OFFSET(PubSubToGo, _impl_.msg_.list_avail_topics_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Subscribe>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Unsubscribe>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Empty>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Empty>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Empty>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PubSubToGo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.PubSubToGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PubSubToGo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.PubSubToGo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (msg_case()) {
    case kSub: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.msg_.sub_, _impl_.msg_.sub_->GetCachedSize(), target, stream);
      break;
    }
    case kUnsub: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.msg_.unsub_, _impl_.msg_.unsub_->GetCachedSize(), target, stream);
      break;
    }
    case kListSubs: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.msg_.list_subs_, _impl_.msg_.list_subs_->GetCachedSize(), target, stream);
      break;
    }
    case kClearSubs: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.msg_.clear_subs_, _impl_.msg_.clear_subs_->GetCachedSize(), target, stream);
      break;
    }
    case kListAvailTopics: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.msg_.list_avail_topics_, _impl_.msg_.list_avail_topics_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.PubSubToGo)
  return target;
}

::size_t PubSubToGo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.PubSubToGo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .com.geotab.ioxproto.Subscribe sub = 1;
    case kSub: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.sub_);
      break;
    }
    // .com.geotab.ioxproto.Unsubscribe unsub = 2;
    case kUnsub: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.unsub_);
      break;
    }
    // .google.protobuf.Empty list_subs = 3;
    case kListSubs: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.list_subs_);
      break;
    }
    // .google.protobuf.Empty clear_subs = 4;
    case kClearSubs: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.clear_subs_);
      break;
    }
    // .google.protobuf.Empty list_avail_topics = 5;
    case kListAvailTopics: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.list_avail_topics_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PubSubToGo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PubSubToGo*>(&to_msg);
  auto& from = static_cast<const PubSubToGo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.PubSubToGo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_msg();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSub: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.sub_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Subscribe>(arena, *from._impl_.msg_.sub_);
        } else {
          _this->_impl_.msg_.sub_->MergeFrom(from._internal_sub());
        }
        break;
      }
      case kUnsub: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.unsub_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Unsubscribe>(arena, *from._impl_.msg_.unsub_);
        } else {
          _this->_impl_.msg_.unsub_->MergeFrom(from._internal_unsub());
        }
        break;
      }
      case kListSubs: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.list_subs_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.msg_.list_subs_);
        } else {
          _this->_impl_.msg_.list_subs_->MergeFrom(from._internal_list_subs());
        }
        break;
      }
      case kClearSubs: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.clear_subs_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.msg_.clear_subs_);
        } else {
          _this->_impl_.msg_.clear_subs_->MergeFrom(from._internal_clear_subs());
        }
        break;
      }
      case kListAvailTopics: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.list_avail_topics_ =
              ::google::protobuf::Message::CopyConstruct<::google::protobuf::Empty>(arena, *from._impl_.msg_.list_avail_topics_);
        } else {
          _this->_impl_.msg_.list_avail_topics_->MergeFrom(from._internal_list_avail_topics());
        }
        break;
      }
      case MSG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PubSubToGo::CopyFrom(const PubSubToGo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.PubSubToGo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PubSubToGo::InternalSwap(PubSubToGo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PubSubToGo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PubSubFromGo::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::PubSubFromGo, _impl_._oneof_case_);
};

void PubSubFromGo::set_allocated_sub_ack(::com::geotab::ioxproto::SubAck* sub_ack) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (sub_ack) {
    ::google::protobuf::Arena* submessage_arena = sub_ack->GetArena();
    if (message_arena != submessage_arena) {
      sub_ack = ::google::protobuf::internal::GetOwnedMessage(message_arena, sub_ack, submessage_arena);
    }
    set_has_sub_ack();
    _impl_.msg_.sub_ack_ = sub_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubFromGo.sub_ack)
}
void PubSubFromGo::set_allocated_topic_list(::com::geotab::ioxproto::TopicList* topic_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (topic_list) {
    ::google::protobuf::Arena* submessage_arena = topic_list->GetArena();
    if (message_arena != submessage_arena) {
      topic_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, topic_list, submessage_arena);
    }
    set_has_topic_list();
    _impl_.msg_.topic_list_ = topic_list;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubFromGo.topic_list)
}
void PubSubFromGo::set_allocated_topic_info_list(::com::geotab::ioxproto::TopicInfoList* topic_info_list) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (topic_info_list) {
    ::google::protobuf::Arena* submessage_arena = topic_info_list->GetArena();
    if (message_arena != submessage_arena) {
      topic_info_list = ::google::protobuf::internal::GetOwnedMessage(message_arena, topic_info_list, submessage_arena);
    }
    set_has_topic_info_list();
    _impl_.msg_.topic_info_list_ = topic_info_list;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubFromGo.topic_info_list)
}
void PubSubFromGo::set_allocated_pub(::com::geotab::ioxproto::Publish* pub) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (pub) {
    ::google::protobuf::Arena* submessage_arena = pub->GetArena();
    if (message_arena != submessage_arena) {
      pub = ::google::protobuf::internal::GetOwnedMessage(message_arena, pub, submessage_arena);
    }
    set_has_pub();
    _impl_.msg_.pub_ = pub;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubFromGo.pub)
}
void PubSubFromGo::set_allocated_clear_subs_ack(::com::geotab::ioxproto::ClearSubsAck* clear_subs_ack) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (clear_subs_ack) {
    ::google::protobuf::Arena* submessage_arena = clear_subs_ack->GetArena();
    if (message_arena != submessage_arena) {
      clear_subs_ack = ::google::protobuf::internal::GetOwnedMessage(message_arena, clear_subs_ack, submessage_arena);
    }
    set_has_clear_subs_ack();
    _impl_.msg_.clear_subs_ack_ = clear_subs_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.PubSubFromGo.clear_subs_ack)
}
PubSubFromGo::PubSubFromGo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.PubSubFromGo)
}
inline PROTOBUF_NDEBUG_INLINE PubSubFromGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::PubSubFromGo& from_msg)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PubSubFromGo::PubSubFromGo(
    ::google::protobuf::Arena* arena,
    const PubSubFromGo& from)
    : ::google::protobuf::Message(arena) {
  PubSubFromGo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kSubAck:
        _impl_.msg_.sub_ack_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::SubAck>(arena, *from._impl_.msg_.sub_ack_);
        break;
      case kTopicList:
        _impl_.msg_.topic_list_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::TopicList>(arena, *from._impl_.msg_.topic_list_);
        break;
      case kTopicInfoList:
        _impl_.msg_.topic_info_list_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::TopicInfoList>(arena, *from._impl_.msg_.topic_info_list_);
        break;
      case kPub:
        _impl_.msg_.pub_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Publish>(arena, *from._impl_.msg_.pub_);
        break;
      case kClearSubsAck:
        _impl_.msg_.clear_subs_ack_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::ClearSubsAck>(arena, *from._impl_.msg_.clear_subs_ack_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.PubSubFromGo)
}
inline PROTOBUF_NDEBUG_INLINE PubSubFromGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PubSubFromGo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PubSubFromGo::~PubSubFromGo() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.PubSubFromGo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PubSubFromGo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
  _impl_.~Impl_();
}

void PubSubFromGo::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:com.geotab.ioxproto.PubSubFromGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (msg_case()) {
    case kSubAck: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.sub_ack_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.sub_ack_);
      }
      break;
    }
    case kTopicList: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.topic_list_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.topic_list_);
      }
      break;
    }
    case kTopicInfoList: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.topic_info_list_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.topic_info_list_);
      }
      break;
    }
    case kPub: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.pub_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.pub_);
      }
      break;
    }
    case kClearSubsAck: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.clear_subs_ack_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.clear_subs_ack_);
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
PubSubFromGo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PubSubFromGo, _impl_._cached_size_),
              false,
          },
          &PubSubFromGo::MergeImpl,
          &PubSubFromGo::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> PubSubFromGo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PubSubFromGo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::PubSubFromGo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.SubAck sub_ack = 1;
    {PROTOBUF_FIELD_OFFSET(PubSubFromGo, _impl_.msg_.sub_ack_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.TopicList topic_list = 2;
    {PROTOBUF_FIELD_OFFSET(PubSubFromGo, _impl_.msg_.topic_list_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.TopicInfoList topic_info_list = 3;
    {PROTOBUF_FIELD_OFFSET(PubSubFromGo, _impl_.msg_.topic_info_list_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.Publish pub = 4;
    {PROTOBUF_FIELD_OFFSET(PubSubFromGo, _impl_.msg_.pub_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .com.geotab.ioxproto.ClearSubsAck clear_subs_ack = 5;
    {PROTOBUF_FIELD_OFFSET(PubSubFromGo, _impl_.msg_.clear_subs_ack_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::SubAck>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::TopicList>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::TopicInfoList>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::Publish>()},
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::ClearSubsAck>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PubSubFromGo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.PubSubFromGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PubSubFromGo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.PubSubFromGo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (msg_case()) {
    case kSubAck: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.msg_.sub_ack_, _impl_.msg_.sub_ack_->GetCachedSize(), target, stream);
      break;
    }
    case kTopicList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.msg_.topic_list_, _impl_.msg_.topic_list_->GetCachedSize(), target, stream);
      break;
    }
    case kTopicInfoList: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.msg_.topic_info_list_, _impl_.msg_.topic_info_list_->GetCachedSize(), target, stream);
      break;
    }
    case kPub: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.msg_.pub_, _impl_.msg_.pub_->GetCachedSize(), target, stream);
      break;
    }
    case kClearSubsAck: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.msg_.clear_subs_ack_, _impl_.msg_.clear_subs_ack_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.PubSubFromGo)
  return target;
}

::size_t PubSubFromGo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.PubSubFromGo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .com.geotab.ioxproto.SubAck sub_ack = 1;
    case kSubAck: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.sub_ack_);
      break;
    }
    // .com.geotab.ioxproto.TopicList topic_list = 2;
    case kTopicList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.topic_list_);
      break;
    }
    // .com.geotab.ioxproto.TopicInfoList topic_info_list = 3;
    case kTopicInfoList: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.topic_info_list_);
      break;
    }
    // .com.geotab.ioxproto.Publish pub = 4;
    case kPub: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.pub_);
      break;
    }
    // .com.geotab.ioxproto.ClearSubsAck clear_subs_ack = 5;
    case kClearSubsAck: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.clear_subs_ack_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PubSubFromGo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PubSubFromGo*>(&to_msg);
  auto& from = static_cast<const PubSubFromGo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.PubSubFromGo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_msg();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSubAck: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.sub_ack_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::SubAck>(arena, *from._impl_.msg_.sub_ack_);
        } else {
          _this->_impl_.msg_.sub_ack_->MergeFrom(from._internal_sub_ack());
        }
        break;
      }
      case kTopicList: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.topic_list_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::TopicList>(arena, *from._impl_.msg_.topic_list_);
        } else {
          _this->_impl_.msg_.topic_list_->MergeFrom(from._internal_topic_list());
        }
        break;
      }
      case kTopicInfoList: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.topic_info_list_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::TopicInfoList>(arena, *from._impl_.msg_.topic_info_list_);
        } else {
          _this->_impl_.msg_.topic_info_list_->MergeFrom(from._internal_topic_info_list());
        }
        break;
      }
      case kPub: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.pub_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::Publish>(arena, *from._impl_.msg_.pub_);
        } else {
          _this->_impl_.msg_.pub_->MergeFrom(from._internal_pub());
        }
        break;
      }
      case kClearSubsAck: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.clear_subs_ack_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::ClearSubsAck>(arena, *from._impl_.msg_.clear_subs_ack_);
        } else {
          _this->_impl_.msg_.clear_subs_ack_->MergeFrom(from._internal_clear_subs_ack());
        }
        break;
      }
      case MSG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PubSubFromGo::CopyFrom(const PubSubFromGo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.PubSubFromGo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PubSubFromGo::InternalSwap(PubSubFromGo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PubSubFromGo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IoxToGo::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxToGo, _impl_._oneof_case_);
};

void IoxToGo::set_allocated_pub_sub(::com::geotab::ioxproto::PubSubToGo* pub_sub) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (pub_sub) {
    ::google::protobuf::Arena* submessage_arena = pub_sub->GetArena();
    if (message_arena != submessage_arena) {
      pub_sub = ::google::protobuf::internal::GetOwnedMessage(message_arena, pub_sub, submessage_arena);
    }
    set_has_pub_sub();
    _impl_.msg_.pub_sub_ = pub_sub;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.IoxToGo.pub_sub)
}
IoxToGo::IoxToGo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.IoxToGo)
}
inline PROTOBUF_NDEBUG_INLINE IoxToGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::IoxToGo& from_msg)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

IoxToGo::IoxToGo(
    ::google::protobuf::Arena* arena,
    const IoxToGo& from)
    : ::google::protobuf::Message(arena) {
  IoxToGo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kPubSub:
        _impl_.msg_.pub_sub_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::PubSubToGo>(arena, *from._impl_.msg_.pub_sub_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.IoxToGo)
}
inline PROTOBUF_NDEBUG_INLINE IoxToGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void IoxToGo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IoxToGo::~IoxToGo() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.IoxToGo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IoxToGo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
  _impl_.~Impl_();
}

void IoxToGo::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:com.geotab.ioxproto.IoxToGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (msg_case()) {
    case kPubSub: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.pub_sub_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.pub_sub_);
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
IoxToGo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IoxToGo, _impl_._cached_size_),
              false,
          },
          &IoxToGo::MergeImpl,
          &IoxToGo::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> IoxToGo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IoxToGo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::IoxToGo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.PubSubToGo pub_sub = 1;
    {PROTOBUF_FIELD_OFFSET(IoxToGo, _impl_.msg_.pub_sub_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::PubSubToGo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void IoxToGo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.IoxToGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IoxToGo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.IoxToGo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.PubSubToGo pub_sub = 1;
  if (msg_case() == kPubSub) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.msg_.pub_sub_, _impl_.msg_.pub_sub_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.IoxToGo)
  return target;
}

::size_t IoxToGo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.IoxToGo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .com.geotab.ioxproto.PubSubToGo pub_sub = 1;
    case kPubSub: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.pub_sub_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IoxToGo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IoxToGo*>(&to_msg);
  auto& from = static_cast<const IoxToGo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.IoxToGo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_msg();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPubSub: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.pub_sub_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::PubSubToGo>(arena, *from._impl_.msg_.pub_sub_);
        } else {
          _this->_impl_.msg_.pub_sub_->MergeFrom(from._internal_pub_sub());
        }
        break;
      }
      case MSG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IoxToGo::CopyFrom(const IoxToGo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.IoxToGo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IoxToGo::InternalSwap(IoxToGo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata IoxToGo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IoxFromGo::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::com::geotab::ioxproto::IoxFromGo, _impl_._oneof_case_);
};

void IoxFromGo::set_allocated_pub_sub(::com::geotab::ioxproto::PubSubFromGo* pub_sub) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_msg();
  if (pub_sub) {
    ::google::protobuf::Arena* submessage_arena = pub_sub->GetArena();
    if (message_arena != submessage_arena) {
      pub_sub = ::google::protobuf::internal::GetOwnedMessage(message_arena, pub_sub, submessage_arena);
    }
    set_has_pub_sub();
    _impl_.msg_.pub_sub_ = pub_sub;
  }
  // @@protoc_insertion_point(field_set_allocated:com.geotab.ioxproto.IoxFromGo.pub_sub)
}
IoxFromGo::IoxFromGo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.geotab.ioxproto.IoxFromGo)
}
inline PROTOBUF_NDEBUG_INLINE IoxFromGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::com::geotab::ioxproto::IoxFromGo& from_msg)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

IoxFromGo::IoxFromGo(
    ::google::protobuf::Arena* arena,
    const IoxFromGo& from)
    : ::google::protobuf::Message(arena) {
  IoxFromGo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (msg_case()) {
    case MSG_NOT_SET:
      break;
      case kPubSub:
        _impl_.msg_.pub_sub_ = ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::PubSubFromGo>(arena, *from._impl_.msg_.pub_sub_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:com.geotab.ioxproto.IoxFromGo)
}
inline PROTOBUF_NDEBUG_INLINE IoxFromGo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void IoxFromGo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IoxFromGo::~IoxFromGo() {
  // @@protoc_insertion_point(destructor:com.geotab.ioxproto.IoxFromGo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IoxFromGo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_msg()) {
    clear_msg();
  }
  _impl_.~Impl_();
}

void IoxFromGo::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:com.geotab.ioxproto.IoxFromGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (msg_case()) {
    case kPubSub: {
      if (GetArena() == nullptr) {
        delete _impl_.msg_.pub_sub_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.pub_sub_);
      }
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
IoxFromGo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IoxFromGo, _impl_._cached_size_),
              false,
          },
          &IoxFromGo::MergeImpl,
          &IoxFromGo::kDescriptorMethods,
          &descriptor_table_iox_5fmessaging_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> IoxFromGo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IoxFromGo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::com::geotab::ioxproto::IoxFromGo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .com.geotab.ioxproto.PubSubFromGo pub_sub = 1;
    {PROTOBUF_FIELD_OFFSET(IoxFromGo, _impl_.msg_.pub_sub_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::com::geotab::ioxproto::PubSubFromGo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void IoxFromGo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.geotab.ioxproto.IoxFromGo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IoxFromGo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.geotab.ioxproto.IoxFromGo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .com.geotab.ioxproto.PubSubFromGo pub_sub = 1;
  if (msg_case() == kPubSub) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.msg_.pub_sub_, _impl_.msg_.pub_sub_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.geotab.ioxproto.IoxFromGo)
  return target;
}

::size_t IoxFromGo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.geotab.ioxproto.IoxFromGo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (msg_case()) {
    // .com.geotab.ioxproto.PubSubFromGo pub_sub = 1;
    case kPubSub: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.msg_.pub_sub_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IoxFromGo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IoxFromGo*>(&to_msg);
  auto& from = static_cast<const IoxFromGo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:com.geotab.ioxproto.IoxFromGo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_msg();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPubSub: {
        if (oneof_needs_init) {
          _this->_impl_.msg_.pub_sub_ =
              ::google::protobuf::Message::CopyConstruct<::com::geotab::ioxproto::PubSubFromGo>(arena, *from._impl_.msg_.pub_sub_);
        } else {
          _this->_impl_.msg_.pub_sub_->MergeFrom(from._internal_pub_sub());
        }
        break;
      }
      case MSG_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IoxFromGo::CopyFrom(const IoxFromGo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.geotab.ioxproto.IoxFromGo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IoxFromGo::InternalSwap(IoxFromGo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.msg_, other->_impl_.msg_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata IoxFromGo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ioxproto
}  // namespace geotab
}  // namespace com
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_iox_5fmessaging_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
